For my project I will use a DFA to solve a traffic light. I will use two alphabets, one to keep track of how many cars are at each light, and one for the state of each light, whether it is (r)ed, (g)reen, or (y)ellow. Whichever light has more cars at it,  will be green. While a light is green the number of cars will slowly count down. While a light is red, the number of cars will slowly increase. Once the red light has more cars than a green light, the green light will switch to yellow, then red, and the red light will then switch to green.

Now that we've talked about ideas in class, im not sure how much this one makes sense. If this idea doesn't seem like it would make a decent project to you, then I could work on some sort of tracert, where there is a letter for each move that the tracert makes. The accepting state is whenever it reaches its destination letter, and then stops.